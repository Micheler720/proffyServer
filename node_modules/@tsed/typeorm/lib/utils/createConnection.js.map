{"version":3,"file":"createConnection.js","sourceRoot":"","sources":["../../src/utils/createConnection.ts"],"names":[],"mappings":";;;AAAA,qCAAgE;AAEhE,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AAEvB,KAAK,UAAU,gBAAgB,CAAC,iBAAoC;IACzE,MAAM,iBAAiB,GAAG,8BAAoB,EAAE,CAAC;IACjD,MAAM,IAAI,GAAG,iBAAiB,CAAC,IAAK,CAAC;IAErC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QAC1B,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,iBAAkB,CAAC,CAAC;QAChE,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;KAC7C;IAED,MAAM,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE5B,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE/C,qDAAqD;IACrD,aAAa;IACb,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;IAEtG,OAAO,UAAU,CAAC;AACpB,CAAC;AAlBD,4CAkBC","sourcesContent":["import {ConnectionOptions, getConnectionManager} from \"typeorm\";\n\nconst connections = new Map();\n\nexport async function createConnection(connectionOptions: ConnectionOptions) {\n  const connectionManager = getConnectionManager();\n  const name = connectionOptions.name!;\n\n  if (!connections.has(name)) {\n    const connection = connectionManager.create(connectionOptions!);\n    connections.set(name, connection.connect());\n  }\n\n  await connections.get(name);\n\n  const connection = connectionManager.get(name);\n\n  // Add hook to close connection when server is killed\n  // @ts-ignore\n  connection.$onDestroy = connection.$onDestroy || (() => connection.isConnected && connection.close());\n\n  return connection;\n}\n"]}